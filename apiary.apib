FORMAT: 1A
HOST: http://graph.hypejunction.com/services/api/graph

# hypeGraph

## About

RESTful API Graph and Web Services for Elgg by hypeJunction.


### Features

* RESTful secure graph access
* Admin interface for managing API consumers
* Granular access controls for API resources on per-consumer basis

### Requirements

* Requires PHP 5.5
* Requires hypeApps (https://github.com/hypeJunction/hypeApps)

### Acknowledgements

* Some of the classes are based on the core web services plugin, but have been heavily
refactored to suit the needs of this plugin. Nevertheless, thanks go to the original authors.

* The approach has been inspired by Evan Winslow, and his multiple posts on the subject.
I am not entirely sure if he likes the actual implementation, but some of his ideas have been
incorporated, so thanks.

* Thanks go to PlayAtMe, Bodyology School of Massage, and Ambercase, for partially
sponsoring various elements of the plugin.

## Authentication

You can configure which authentication methods are allowed on your site.

**Note** that calling Graph endpoints will terminate current user sessions.
Graph endpoints can be accessed directly by JS clients and browser via ```/graph``` (instead of 
```/services/api/graph```) pagehandler with CSRF (Elgg action) tokens.

Whatever API authentication methods you choose, make sure that the graph endpoints **are served over HTTPs**.

### API Authentication

#### API Key

You can authenticate your API requests with an API key. API key can be supplied as an ```api_key``` URI query
parameter, or as an ```X-Elgg-Apikey``` request header.

#### HMAC Signature

API requests can also be signed with HMAC using API secret. See the code for implementation details.


### User Authentication

#### Username and password

Though highly discouraged, you can add username and password to each request to authenticate the user.
This authentication method is handled by the core userpass PAM.

#### Access Token

You can acquire a user token at the ```POST /me/token``` endpoint. You will need to provide a username and password
pair in order to receive a token in response. The tokens are valid for 60 minutes.

You can use ```POST `/:user/token``` endpoint to acquire a token to perform actions on behalf of a user 
that you can manage (```ElggUser::canEdit()``` permission is required). As an authenticated admin user, 
you can get an access token for any user in the system, and perform actions on their behalf.

You can exchange a user token for long-living one (30 days), using ```PUT /:user/token``` endpoint.

#### API Consumer username and password

You can set up your API Consumers with custom usernames and passwords, which they can use to authenticate as 
the user, who owns the API Consumer entity. This is helpful, when you don't want to pass around actual 
user credentials (and inconvenience users with frequent password resets).


## Endpoints

To access the graph you can use one of the following endpoints:

* Using an API client: ```https://{{site-url}}/services/api/graph/{{node}}/{{edge}}?api_key={{api-key}}```,
* Using a JS client: ```https://{{site-url}}/graph/{{node}}/{{edge}}?__elgg_ts={{elgg_ts}}&__elgg_token={{elgg_token}}```,

where
 - ```{{site-url}}``` is your Elgg site URL
 - ```{{node}}``` is an ID of a node, e.g. uid of a resource
 - ```{{edge}}``` is the edge of a node, e.g. friends
 - ```{{api-key}}``` is the API key assigned to your client
 - ```{{elgg_ts}}``` and ```{{elgg_token}} are CSRF token elements

Unlike RPC services, you can not pass ```{{format}}```.
Use HTTP ```Accept``` header to specify the ```Content-Type``` you would like to consume, e.g.

```Accept: application/json```


## Nodes and Edges

Routes are represented with nodes and edges, where as a node is an Elgg entity,
metadata, annotation, river item, or relationship, and an edge is an alias for a subset of resources.

For example, ```POST /me/activity``` route allows the consumer to create a new
river item on behalf of the currently authenticated user, while ```GET /ge25/members```
retrieves a list of members in a group.

Note that the graph does not encourage the use of Elgg ```guid```s, instead it uses ```uid```s,
which are strings comprising of a prefix and a numeric id. 

UIDs are mapped as follows:

* ```ElggUser``` node uid is prefixed with ```ue```, e.g. ```ue2521```
* ```ElggObject``` node uid is prefixed with ```oe```, e.g. ```oe2758```
* ```ElggGroup``` node uid is prefixed with ```ge```, e.g. ```ge2737```
* ```ElggSite``` node uid is prefixed with ```se```, e.g. ```se1```
* ```ElggRiverItem``` node uid is prefixed with ```rv```, e.g. ```rv3738```
* ```ElggAnnotation``` node uid is prefixed with ```an```, e.g. ```an7789```
* ```ElggMetadata``` node uid is prefixed with ```md```, e.g. ```md74839```
* ```ElggRelationship``` node uid is prefixed with ```rl```, e.g. ```rl4657```

Integer UIDs fallback to entity guids. Usernames can also be used as UIDs, 
e.g. for a logged in user with username ```UserWithUsername``` and guid ```2521```
the following are identical calls:

   * `/me/friends`
   * `/ue2521/friends`
   * `/2521/friends`
   * `/UserWithUsername/friends`

You can map your routes to controllers that implement ```\hypeJunction\Graph\ControllerInterface``` interface.

To see a full list of routes, visit *API Endpoints* section in the site's admin area.

Entity types need to be exposed explicitly by providing an alias.

```php

        // Closures are used for illustration. Don't do that in your plugins, use a defined callable

        elgg_register_plugin_hook_handler('aliases', 'graph', function($hook, $type, $return) {
            $return['object']['my_cool_subtype'] = ':my_cool_subtype';
            return $return;
        });

        elgg_register_plugin_hook_handler('routes', 'graph', function($hook, $type, $return) {
            $return[':my_cool_subtype'] = MyCoolSubtypeController::class;
            $return[':user/coolness'] = UserCoolnessController::class;
        });
```

Your controllers should define the parameters expected and the business logic for each HTTP request method.


## Response

### Format

Responses will be sent with an appropriate HTTP header and will contain a body in the following format:

```json
       {
           'status': 200,
           'message': 'OK',
           'result' : {
                'key': 'value'
            }
        }
```

```json
        {
            'status': 404,
            'message': 'Requested resource was not found',
            'result' : [],
            'log': []
        }
```

To receive information about runtime errors, you can add ```?debug=true``` to your request.
This will add a ```log``` object to the response.

For initial testing and debugging, you can enable debug mode in plugin settings.
This will add additional data to the response, such as request and query parameters,
currently logged in user and API consumer, exception trace etc.

### Error Codes

Graph may return one of the following error codes:

* ```400 Bad Request``` - Request does not contain required information, or provided data does not allow to successfully process data
* ```401 Unauthorized``` - Provided API and/or User Authentication credentials are invalid
* ```403 Forbidden``` - Authenticated API consumer and/or user are not allowed to the access the endpoint, or they lack priviliges to modify entities
* ```404 Not Found``` - Endpoint does not exist and/or entity does not exist or node's ACL does not allow it to be accessed by the authenticated user
* ```405 Method Not Allowed``` - Endpoint can not be accessed using given HTTP request method
* ```500 Internal Server Error``` - Something went completely wrong on the server


### Resource export fields

You have full control over what fields are exported for any given resource type (in any particular consumer context or user context).

* ```'fields','graph'``` plugin hook handler can be used to define exportable fields
This hook receives ```'node'``` parameter, which can be either an entity, annotation, metadata, relationship or river item

* ```'to:object',$type``` plugin hook can be used to filter the output of a given resource
This is a core hook, triggered by ```ElggEntity::toObject()```, so make sure you sniff the context before overriding the output

* ```'result','graph'``` plugin hook can be used to filter the final result before it is sent to the requestor
This hook received ```GenericResult``` instance as the return value.

* To prevent access to a certain node or an endpoint, you can use ```'permissions_check:graph',$route``` hook, which receives
a node as a parameter.


## Magic

### Magic nodes

* ```/me``` nodes resolve to ```/:user``` nodes with the currently authenticated user uid
* ```/site``` nodes resolve to ```/:site``` nodes for the current site


### Magic query parameters

* ```?debug=true``` will append a log of runtime errors to the response
* ```?fields=uid,name,owner``` will constrain resource export to only those fields. If fields are not defined as allowed for that resource type, they will return ```null```


## Batch Results

### Sorting

Batch results can be sorted by a number of fields. You can pass ```sort``` parameter with your query, that can take in multiple field => direction definitions
Results can be sorted by ```alpha``` (alphabetically according to name/title) or by any attribute field from the entities table (e.g. ```uid```, ```subtype``` etc)

```php

        $test = new Client($api_key);
        $url = $test->buildGraphUrl('/site/groups');
        $result = $test->get($url, array(
            'sort' => array(
                'alpha' => 'ASC',
                'time_created' => 'DESC',
            ),
            'fields' => 'uid,name',
            'limit' => 5,
            'offset' => 15,
        ));

```

### Response Format

Request above will output something similar to this:

```json
        {
          "status": 200,
          "message": "OK"
          "result": {
            "total": 69,
            "limit": 5,
            "offset": 15,
            "nodes": {
              "16": {
                "uid": "ge7210",
                "name": "Enim voluptatem nisi veniam deserunt et."
              },
              "17": {
                "uid": "ge7199",
                "name": "Eos qui minima aperiam."
              },
              "18": {
                "uid": "ge7202",
                "name": "Eos quidem dolorem cum voluptas quis quo."
              },
              "19": {
                "uid": "ge7208",
                "name": "Et qui iste quo molestiae sit veritatis."
              },
              "20": {
                "uid": "ge7204",
                "name": "Explicabo ullam saepe debitis qui."
              }
            }
          }
        }
```


## File Uploads

Exercise caution with allowing file uploads via the Graph. Only allow uploads by trusted
consumers, otherwise you are opening up a security vulnerability.



## Group Root

### Graph Root [/]

### List all endpoints [GET /]

Retrieve a list of all resource endpoints available through the Graph API

+ Response 200 (application/json)

        {
            "status": 200,
            "message": "OK",
            "result": [
                {
                    "method": ":site",
                    "call_method": "GET",
                    "endpoint": "GET /:site",
                    "description": "Returns site entity attritubes and basic configuration values"
                },
                {
                    "method": ":site/users",
                    "call_method": "GET",
                    "endpoint": "GET /:site/users",
                    "description": "Returns a list of users registered on the site",
                    "parameters": {
                        "1": {
                            "name": "limit",
                            "description": "Number of entries to return (max 50)",
                            "type": "integer",
                            "default": 10
                        },
                        "2": {
                            "name": "offset",
                            "description": "Offset from the start of the list",
                            "type": "integer"
                        },
                        "3": {
                            "name": "sort",
                            "description": "Sorting order",
                            "type": "array",
                            "default": {
                                "time_created": "DESC"
                            }
                        }
                    }
                },
            ]
        }

+ Response 403

    [403][]


### 400 [/400]

+ Model (application/json)

        {
            "status": 400,
            "message": "Bad request - Action can not be completed with given parameters"
            "result": null
        }


### 403 [/403]

+ Model (application/json)

        {
            "status": 403,
            "message": "Permission denied - You do not have sufficient privileges to access this endpoint or you are trying to modify an entity that you do not have acess to"
            "result": null
        }

### 404 [/404]

+ Model (application/json)

        {
            "status": 404,
            "message": "Not found - Node does not exist or you do not have permissions to access it"
            "result": null
        }

### 500 [/500]

+ Model (application/json)

        {
            "status": 500,
            "message": "Internal Server Error"
            "result": null
        }
        

### Group Access Tokens

### Access Token [/{user_uid}/token]

+ Model (application/json)

        {
            "status": 200,
            "message": "OK",
            "result": {
                "token": "42349f20b1ced62333b218a92d3465a2",
                "expires": "2015-07-21T04:34:31-07:00",
                "user": {
                    "uid": "ue87"
                }
        }


### Create a new token [POST /{user_uid}/token{?username,password}]

Create a new user access token

+ Parameters
    + user_uid:`me` (string, required) - User UID or ```me```
    + username (string,optional) - Username of the token requestor
    + password (string,optional) - Password of the token requestor
    
+ Response 200

    [Access Token][]
    
+ Response 403

    [403][]
    
+ Response 500

    [500][]


### Exchange a token [PUT /{user_uid}/token{?auth_token}]

Exchange a short-living token for a long-living one

+ Parameters
    + user_uid:`me` (string, required) - User UID or ```me```
    + auth_token (string, required) - Token to delete
    
+ Response 200

    [Access Token][]
    
+ Response 403

    [403][]
    
+ Response 500

    [500][]
    

### Delete a token [DELETE /{user_uid}/token{?auth_token}]

Delete a token

+ Parameters
    + user_uid:`me` (string, required) - User UID or ```me```
    + auth_token (string, required) - Token to delete
    
+ Response 200 (application/json)

        {
           "status": 200,
           "message": "OK",
           "result": true
        }
    
+ Response 403

    [403][]
    
+ Response 500

    [500][]
    
    


### Group Site

### Site Node [/{site_uid}]

+ Model (application/json)

        {
            "status": 200,
            "message": "OK"
            "result": {
                "total": 1,
                "limit": 0,
                "offset": 0,
                "nodes": {
                    "1": {
                        "type": "site",
                        "subtype": "",
                        "uid": "se1",
                        "name": "Site Name",
                        "description": "Site description",
                        "url": "http://example.com/",
                        "email": "admin@example.com",
                        "allow_registration": true,
                        "default_access": "1",
                        "debug": null,
                        "walled_garden": true,
                        "time_created": "2014-11-14T03:46:59-08:00",
                        "enabled": "yes"
                    }
                }
            }
        }

### Retrieve a single node [GET /{site_uid}{?fields}]

Retrieve site node by its *uid*

+ Parameters
    + site_uid:`site` (string, required) - Site UID or ```site``` keyword
    + fields:`uid,name,description,url,walled_garden` (string, optional) - Comma-separated list of fields to include in the export

+ Response 200

    [Site Node][]

+ Response 403

    [403][]

+ Response 404

    [404][]








### Group Activity

### Activity Node [/{river_uid}]

+ Model (application/json)

        {
            "status": 200,
            "message": "OK",
            "result": {
                "total": 1,
                "limit": 0,
                "offset": 0,
                "nodes": {
                    "1": {
                        "type": "river",
                        "subtype": "item",
                        "uid": "rv280",
                        "action": "stream:comment",
                        "subject": {
                            "type": "user",
                            "subtype": "",
                            "uid": "ue58",
                            "name": "Devon Ratke",
                            "username": "rodriguez.adolphus",
                            "briefdescription": "Centralized full-range service-desk",
                            "banned": false,
                            "validated": "1",
                            "admin": false,
                            "url": "http:\/\/ambercal.dev\/profile\/rodriguez.adolphus",
                            "icon": {
                                "topbar": "http:\/\/ambercal.dev\/mod\/profile\/icondirect.php?lastcache=1420624467&joindate=1415975987&guid=58&size=topbar",
                                "tiny": "http:\/\/ambercal.dev\/mod\/profile\/icondirect.php?lastcache=1420624467&joindate=1415975987&guid=58&size=tiny",
                                "small": "http:\/\/ambercal.dev\/mod\/profile\/icondirect.php?lastcache=1420624467&joindate=1415975987&guid=58&size=small",
                                "medium": "http:\/\/ambercal.dev\/mod\/profile\/icondirect.php?lastcache=1420624467&joindate=1415975987&guid=58&size=medium",
                                "large": "http:\/\/ambercal.dev\/mod\/profile\/icondirect.php?lastcache=1420624467&joindate=1415975987&guid=58&size=large",
                                "master": "http:\/\/ambercal.dev\/mod\/profile\/icondirect.php?lastcache=1420624467&joindate=1415975987&guid=58&size=master"
                            },
                            "time_created": "2014-11-14T06:39:47-08:00",
                            "enabled": "yes"
                        },
                        "object": {
                            "type": "object",
                            "subtype": "comment",
                            "uid": "oe1300",
                            "title": null,
                            "description": "Comment 10",
                            "url": "http:\/\/ambercal.dev\/stream\/comments\/859\/1300#elgg-object-1300",
                            "icon": {
                                "topbar": "http:\/\/ambercal.dev\/mod\/profile\/icondirect.php?lastcache=1420624467&joindate=1415975987&guid=58&size=topbar",
                                "tiny": "http:\/\/ambercal.dev\/mod\/profile\/icondirect.php?lastcache=1420624467&joindate=1415975987&guid=58&size=tiny",
                                "small": "http:\/\/ambercal.dev\/mod\/profile\/icondirect.php?lastcache=1420624467&joindate=1415975987&guid=58&size=small",
                                "medium": "http:\/\/ambercal.dev\/mod\/profile\/icondirect.php?lastcache=1420624467&joindate=1415975987&guid=58&size=medium",
                                "large": "http:\/\/ambercal.dev\/mod\/profile\/icondirect.php?lastcache=1420624467&joindate=1415975987&guid=58&size=large",
                                "master": "http:\/\/ambercal.dev\/mod\/profile\/icondirect.php?lastcache=1420624467&joindate=1415975987&guid=58&size=master"
                            },
                            "owner": {
                                "type": "user",
                                "subtype": "",
                                "uid": "ue58",
                                "name": "Devon Ratke",
                                "username": "rodriguez.adolphus",
                                "briefdescription": "Centralized full-range service-desk",
                                "banned": false,
                                "validated": "1",
                                "admin": false,
                                "url": "http:\/\/ambercal.dev\/profile\/rodriguez.adolphus",
                                "icon": {
                                    "topbar": "http:\/\/ambercal.dev\/mod\/profile\/icondirect.php?lastcache=1420624467&joindate=1415975987&guid=58&size=topbar",
                                    "tiny": "http:\/\/ambercal.dev\/mod\/profile\/icondirect.php?lastcache=1420624467&joindate=1415975987&guid=58&size=tiny",
                                    "small": "http:\/\/ambercal.dev\/mod\/profile\/icondirect.php?lastcache=1420624467&joindate=1415975987&guid=58&size=small",
                                    "medium": "http:\/\/ambercal.dev\/mod\/profile\/icondirect.php?lastcache=1420624467&joindate=1415975987&guid=58&size=medium",
                                    "large": "http:\/\/ambercal.dev\/mod\/profile\/icondirect.php?lastcache=1420624467&joindate=1415975987&guid=58&size=large",
                                    "master": "http:\/\/ambercal.dev\/mod\/profile\/icondirect.php?lastcache=1420624467&joindate=1415975987&guid=58&size=master"
                                },
                                "time_created": "2014-11-14T06:39:47-08:00",
                                "enabled": "yes"
                            },
                            "container": {
                                "type": "object",
                                "subtype": "blog",
                                "uid": "oe859",
                                "title": "Blog 21",
                                "description": "<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus eget aliquet mi. Sed pulvinar lectus vel suscipit faucibus. Mauris id metus augue. Ut faucibus lectus non mattis egestas. Nulla ullamcorper pulvinar purus, at faucibus quam porttitor sit amet. Donec consectetur, nulla eget fringilla dapibus, velit diam euismod enim, ut tincidunt lectus eros eget magna. Mauris laoreet risus dolor, in imperdiet dolor tincidunt et. Ut nulla nibh, condimentum in diam vel, volutpat accumsan justo. Proin interdum mattis ex quis consequat. Proin dignissim, dolor vel faucibus sagittis, diam tellus mattis felis, eget blandit dui arcu eu nisl. Mauris sodales iaculis lacinia. Nam rutrum nisi ante, a scelerisque nunc imperdiet a. Praesent rhoncus pretium malesuada. Proin id aliquam sem. Phasellus malesuada arcu justo, nec cursus lorem lacinia vel. Phasellus congue vestibulum justo, sed egestas orci malesuada a. Nam mollis nisl id ligula imperdiet, vitae mollis tellus aliquam. Donec venenatis, eros nec ullamcorper commodo, est lacus ornare dolor, eu congue massa quam eu nisl. Aliquam quis purus ac diam elementum bibendum. Vestibulum dolor enim, laoreet eget orci sed, venenatis aliquet leo. Donec eleifend diam eu odio placerat semper. Morbi a purus nisi. Sed sit amet placerat lacus. Pellentesque fermentum magna quis felis accumsan condimentum. Duis varius et velit ut elementum. Cras rhoncus volutpat rhoncus. Pellentesque porttitor, arcu vitae pharetra luctus, sapien elit rhoncus neque, eget mollis tellus lacus nec lacus. Donec imperdiet a quam quis pellentesque. Maecenas in viverra nisl. Pellentesque tempus elit sed justo ultrices commodo.<\/p>",
                                "url": "http:\/\/ambercal.dev\/blog\/view\/859\/blog-21",
                                "icon": {
                                    "topbar": "http:\/\/ambercal.dev\/_graphics\/icons\/default\/topbar.png",
                                    "tiny": "http:\/\/ambercal.dev\/_graphics\/icons\/default\/tiny.png",
                                    "small": "http:\/\/ambercal.dev\/_graphics\/icons\/default\/small.png",
                                    "medium": "http:\/\/ambercal.dev\/_graphics\/icons\/default\/medium.png",
                                    "large": "http:\/\/ambercal.dev\/_graphics\/icons\/default\/large.png",
                                    "master": "http:\/\/ambercal.dev\/_graphics\/icons\/default\/master.png"
                                },
                                "owner": {
                                    "type": "user",
                                    "subtype": "",
                                    "uid": "ue58",
                                    "name": "Devon Ratke",
                                    "username": "rodriguez.adolphus",
                                    "briefdescription": "Centralized full-range service-desk",
                                    "banned": false,
                                    "validated": "1",
                                    "admin": false,
                                    "url": "http:\/\/ambercal.dev\/profile\/rodriguez.adolphus",
                                    "icon": {
                                        "topbar": "http:\/\/ambercal.dev\/mod\/profile\/icondirect.php?lastcache=1420624467&joindate=1415975987&guid=58&size=topbar",
                                        "tiny": "http:\/\/ambercal.dev\/mod\/profile\/icondirect.php?lastcache=1420624467&joindate=1415975987&guid=58&size=tiny",
                                        "small": "http:\/\/ambercal.dev\/mod\/profile\/icondirect.php?lastcache=1420624467&joindate=1415975987&guid=58&size=small",
                                        "medium": "http:\/\/ambercal.dev\/mod\/profile\/icondirect.php?lastcache=1420624467&joindate=1415975987&guid=58&size=medium",
                                        "large": "http:\/\/ambercal.dev\/mod\/profile\/icondirect.php?lastcache=1420624467&joindate=1415975987&guid=58&size=large",
                                        "master": "http:\/\/ambercal.dev\/mod\/profile\/icondirect.php?lastcache=1420624467&joindate=1415975987&guid=58&size=master"
                                    },
                                    "time_created": "2014-11-14T06:39:47-08:00",
                                    "enabled": "yes"
                                },
                                "container": {
                                    "type": "user",
                                    "subtype": "",
                                    "uid": "ue58",
                                    "name": "Devon Ratke",
                                    "username": "rodriguez.adolphus",
                                    "briefdescription": "Centralized full-range service-desk",
                                    "banned": false,
                                    "validated": "1",
                                    "admin": false,
                                    "url": "http:\/\/ambercal.dev\/profile\/rodriguez.adolphus",
                                    "icon": {
                                        "topbar": "http:\/\/ambercal.dev\/mod\/profile\/icondirect.php?lastcache=1420624467&joindate=1415975987&guid=58&size=topbar",
                                        "tiny": "http:\/\/ambercal.dev\/mod\/profile\/icondirect.php?lastcache=1420624467&joindate=1415975987&guid=58&size=tiny",
                                        "small": "http:\/\/ambercal.dev\/mod\/profile\/icondirect.php?lastcache=1420624467&joindate=1415975987&guid=58&size=small",
                                        "medium": "http:\/\/ambercal.dev\/mod\/profile\/icondirect.php?lastcache=1420624467&joindate=1415975987&guid=58&size=medium",
                                        "large": "http:\/\/ambercal.dev\/mod\/profile\/icondirect.php?lastcache=1420624467&joindate=1415975987&guid=58&size=large",
                                        "master": "http:\/\/ambercal.dev\/mod\/profile\/icondirect.php?lastcache=1420624467&joindate=1415975987&guid=58&size=master"
                                    },
                                    "time_created": "2014-11-14T06:39:47-08:00",
                                    "enabled": "yes"
                                },
                                "access": {
                                    "id": 1,
                                    "label": "Logged in users"
                                },
                                "time_created": "2014-12-13T05:58:58-08:00",
                                "enabled": "yes",
                                "tags": [
                                    "tag 85",
                                    "tag 2"
                                ],
                                "status": "published",
                                "comments_on": "On",
                                "excerpt": ""
                            },
                            "access": {
                                "id": 1,
                                "label": "Logged in users"
                            },
                            "time_created": "2014-12-24T08:22:56-08:00",
                            "enabled": "yes",
                            "tags": [
                            ]
                        },
                        "target": {
                            "type": "object",
                            "subtype": "blog",
                            "uid": "oe859",
                            "title": "Blog 21",
                            "description": "<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus eget aliquet mi. Sed pulvinar lectus vel suscipit faucibus. Mauris id metus augue. Ut faucibus lectus non mattis egestas. Nulla ullamcorper pulvinar purus, at faucibus quam porttitor sit amet. Donec consectetur, nulla eget fringilla dapibus, velit diam euismod enim, ut tincidunt lectus eros eget magna. Mauris laoreet risus dolor, in imperdiet dolor tincidunt et. Ut nulla nibh, condimentum in diam vel, volutpat accumsan justo. Proin interdum mattis ex quis consequat. Proin dignissim, dolor vel faucibus sagittis, diam tellus mattis felis, eget blandit dui arcu eu nisl. Mauris sodales iaculis lacinia. Nam rutrum nisi ante, a scelerisque nunc imperdiet a. Praesent rhoncus pretium malesuada. Proin id aliquam sem. Phasellus malesuada arcu justo, nec cursus lorem lacinia vel. Phasellus congue vestibulum justo, sed egestas orci malesuada a. Nam mollis nisl id ligula imperdiet, vitae mollis tellus aliquam. Donec venenatis, eros nec ullamcorper commodo, est lacus ornare dolor, eu congue massa quam eu nisl. Aliquam quis purus ac diam elementum bibendum. Vestibulum dolor enim, laoreet eget orci sed, venenatis aliquet leo. Donec eleifend diam eu odio placerat semper. Morbi a purus nisi. Sed sit amet placerat lacus. Pellentesque fermentum magna quis felis accumsan condimentum. Duis varius et velit ut elementum. Cras rhoncus volutpat rhoncus. Pellentesque porttitor, arcu vitae pharetra luctus, sapien elit rhoncus neque, eget mollis tellus lacus nec lacus. Donec imperdiet a quam quis pellentesque. Maecenas in viverra nisl. Pellentesque tempus elit sed justo ultrices commodo.<\/p>",
                            "url": "http:\/\/ambercal.dev\/blog\/view\/859\/blog-21",
                            "icon": {
                                "topbar": "http:\/\/ambercal.dev\/_graphics\/icons\/default\/topbar.png",
                                "tiny": "http:\/\/ambercal.dev\/_graphics\/icons\/default\/tiny.png",
                                "small": "http:\/\/ambercal.dev\/_graphics\/icons\/default\/small.png",
                                "medium": "http:\/\/ambercal.dev\/_graphics\/icons\/default\/medium.png",
                                "large": "http:\/\/ambercal.dev\/_graphics\/icons\/default\/large.png",
                                "master": "http:\/\/ambercal.dev\/_graphics\/icons\/default\/master.png"
                            },
                            "owner": {
                                "type": "user",
                                "subtype": "",
                                "uid": "ue58",
                                "name": "Devon Ratke",
                                "username": "rodriguez.adolphus",
                                "briefdescription": "Centralized full-range service-desk",
                                "banned": false,
                                "validated": "1",
                                "admin": false,
                                "url": "http:\/\/ambercal.dev\/profile\/rodriguez.adolphus",
                                "icon": {
                                    "topbar": "http:\/\/ambercal.dev\/mod\/profile\/icondirect.php?lastcache=1420624467&joindate=1415975987&guid=58&size=topbar",
                                    "tiny": "http:\/\/ambercal.dev\/mod\/profile\/icondirect.php?lastcache=1420624467&joindate=1415975987&guid=58&size=tiny",
                                    "small": "http:\/\/ambercal.dev\/mod\/profile\/icondirect.php?lastcache=1420624467&joindate=1415975987&guid=58&size=small",
                                    "medium": "http:\/\/ambercal.dev\/mod\/profile\/icondirect.php?lastcache=1420624467&joindate=1415975987&guid=58&size=medium",
                                    "large": "http:\/\/ambercal.dev\/mod\/profile\/icondirect.php?lastcache=1420624467&joindate=1415975987&guid=58&size=large",
                                    "master": "http:\/\/ambercal.dev\/mod\/profile\/icondirect.php?lastcache=1420624467&joindate=1415975987&guid=58&size=master"
                                },
                                "time_created": "2014-11-14T06:39:47-08:00",
                                "enabled": "yes"
                            },
                            "container": {
                                "type": "user",
                                "subtype": "",
                                "uid": "ue58",
                                "name": "Devon Ratke",
                                "username": "rodriguez.adolphus",
                                "briefdescription": "Centralized full-range service-desk",
                                "banned": false,
                                "validated": "1",
                                "admin": false,
                                "url": "http:\/\/ambercal.dev\/profile\/rodriguez.adolphus",
                                "icon": {
                                    "topbar": "http:\/\/ambercal.dev\/mod\/profile\/icondirect.php?lastcache=1420624467&joindate=1415975987&guid=58&size=topbar",
                                    "tiny": "http:\/\/ambercal.dev\/mod\/profile\/icondirect.php?lastcache=1420624467&joindate=1415975987&guid=58&size=tiny",
                                    "small": "http:\/\/ambercal.dev\/mod\/profile\/icondirect.php?lastcache=1420624467&joindate=1415975987&guid=58&size=small",
                                    "medium": "http:\/\/ambercal.dev\/mod\/profile\/icondirect.php?lastcache=1420624467&joindate=1415975987&guid=58&size=medium",
                                    "large": "http:\/\/ambercal.dev\/mod\/profile\/icondirect.php?lastcache=1420624467&joindate=1415975987&guid=58&size=large",
                                    "master": "http:\/\/ambercal.dev\/mod\/profile\/icondirect.php?lastcache=1420624467&joindate=1415975987&guid=58&size=master"
                                },
                                "time_created": "2014-11-14T06:39:47-08:00",
                                "enabled": "yes"
                            },
                            "access": {
                                "id": 1,
                                "label": "Logged in users"
                            },
                            "time_created": "2014-12-13T05:58:58-08:00",
                            "enabled": "yes",
                            "tags": [
                                "tag 85",
                                "tag 2"
                            ],
                            "status": "published",
                            "comments_on": "On",
                            "excerpt": ""
                        },
                        "annotation": 0,
                        "access": {
                            "id": 1,
                            "label": "Logged in users"
                        },
                        "time_created": "2014-12-24T08:22:56-08:00",
                        "enabled": "yes"
                    }
                }
            }
        }




### Create a new node [POST /{site_uid}/activity{?action,view,subject_uid,object_uid,target_uid,annotation_uid,fields}]

Adds a new activity (river) item to the site feed

+ Parameters

    + site_uid:`site` (string, required) - site UID or ``site``
    + action:`graph:test` (string, required) - Action type
    + view (string, optional) - Activity view
        + Default: `Activity/elements/layout`
    + subject_uid:`ue44` (string, required) - UID of the subject entity
    + object_uid:`oe788` (string, required) - UID of the object entity
    + target_uid (string, optional) - UID of the target entity
    + annotation_uid (string, optional) - UID of the annotation
    + fields:`uid,action,subject,object,target` (string, optional) - Comma-separated list of fields to include in the output

+ Response 200

    [Activity Node][]

+ Response 400

    [400][]

+ Response 403

    [403][]
    

### Retrieve a single node [GET /{river_uid}{?fields}]

Retrieve an activity (river) item by its *uid*

+ Parameters
    + river_uid:`rv724` (string, required) - UID of the river item
    + fields:`uid,subject,object,target,action` (string, optional) - Comma-separated list of fields to include in the output

+ Response 200

    [Activity Node][]

+ Response 403

    [403][]

+ Response 404

    [404][]


### Delete a single node [DELETE /{river_uid}]

Delete a single node by its *uid*

+ Parameters
    + river_uid:`rv723` (string,required) - UID of the river item

+ Response 200

        {
            "status": 200,
            "message": "OK",
            "result": true
        }

+ Response 403

    [403][]

+ Response 404

    [404][]


### Activity Lists [/{uid}/activity]

### List site activity [GET /{site_uid}/activity{?fields,limit,offset,types,subtypes,action_types}]

Retrieve a list of site activity nodes filtered by *type*, *subtype*, *action*

+ Parameters

    + site_uid:`site` (string, required) - Site UID, or ```site```
    + fields:`uid,action,subject,object,target` (string, optional) - Comma-separated list of fields to include in the output
    + limit:`10` (number, optional) - number of activities to list
        + Default: `10`
    + offset:`0` (number, optional) - offset from the list start
    + types:`object` (array[string], optional) - constrain by entity types
    + subtypes:`blog` (array[string], optional) - constrain by entity subtypes
    + action_types:`create` (array[string], optional) - constrain by action types


+ Response 200

    [Activity Node][]







## Group Users

### User Node [/{user_uid}]

+ Model (application/json)

        {
            "status": 200,
            "message": "OK"
            "result": {
                "total": 1,
                "limit": 0,
                "offset": 0,
                "nodes": {
                    "1": {
                        "type":"user",
                        "subtype":"",
                        "uid":"ue58",
                        "name":"Devon Ratke",
                        "username":"rodriguez.adolphus",
                        "briefdescription":"Centralized full-range service-desk",
                        "banned":false,
                        "validated":"1",
                        "admin":false,
                        "url":"http:\/\/ambercal.dev\/profile\/rodriguez.adolphus",
                        "icon":{
                            "topbar":"http:\/\/ambercal.dev\/mod\/profile\/icondirect.php?lastcache=1420624467&joindate=1415975987&guid=58&size=topbar",
                            "tiny":"http:\/\/ambercal.dev\/mod\/profile\/icondirect.php?lastcache=1420624467&joindate=1415975987&guid=58&size=tiny",
                            "small":"http:\/\/ambercal.dev\/mod\/profile\/icondirect.php?lastcache=1420624467&joindate=1415975987&guid=58&size=small",
                            "medium":"http:\/\/ambercal.dev\/mod\/profile\/icondirect.php?lastcache=1420624467&joindate=1415975987&guid=58&size=medium",
                            "large":"http:\/\/ambercal.dev\/mod\/profile\/icondirect.php?lastcache=1420624467&joindate=1415975987&guid=58&size=large",
                            "master":"http:\/\/ambercal.dev\/mod\/profile\/icondirect.php?lastcache=1420624467&joindate=1415975987&guid=58&size=master"
                        },
                        "time_created":"2014-11-14T06:39:47-08:00",
                        "enabled":"yes"
                    }
                }
            }
        }

### Retrieve a single node [GET /{user_uid}{?fields}]

Retrieve a user node by its *uid*

+ Parameters
    + user_uid:`me` (string,required) - User UID or ```me``` keyword
    + fields:`uid,username,admin` - Comma-separated list of fields to include in the output

+ Response 200

    [User Node][]

+ Response 403

    [403][]

+ Response 404

    [404][]


### Delete a single node [DELETE /{user_uid}]

Delete a user node by its *uid*. **Note** users can not delete themselves.

+ Parameters
    + user_uid:`me` (string,required) - User UID or ```me``` keyword

+ Response 200

    [User Node][]

+ Response 403

    [403][]

+ Response 404

    [404][]




### Register a new user [POST /{site_uid}/users{?email,username,password,name,language,notify,friend_uid,invitecode}]

Register a new user. Email validation is required if uservalidationbyemail plugin is enabled. 
To allow registration via Grpah if site registration is disabled, use ```'allow_registration','graph'``` hook.
To bypass email validation, use ```'validate_registration','graph'``` hook.

+ Parameters
    + site_uid:`site` (string, required) - Site UID or ```site```
    + email (string, required) - Email address
    + username (string, optional) - Username, autogenerated if left empty
    + password (string, optional) - Password, autogenerated if left empty
    + name (string, optional) - Display name, autogenerated if left empty
    + language:`en` (string, optional) - Language code
        + Default: `en`
    + notify: `true` (bool, optional) - Send an email with user credentials
        + Defualt: `true`
    + friend_uid (string, optional) - UID of the user who issued the invitecode
    + invitecode (string, optional) - Invitation code generated by the inviting friend
    
+ Response 200
    
    [User Node][]

+ Response 403

    [403][]
    
    

### User Lists [/{site_uid}/users]

### List users [GET /{site_uid}/users?sort%5Balpha%5D=ASC{&limit,offset,fields}]

Retrieve a list of site users

+ Parameters
    
    + site_uid:`site` (string, required) - Site UID or ```site```
    + limit:`10` (int, optional) - Number of nodes to return
    + offset:`0` (int, optional) - Offset from the start
    + sort (array, optional) - Sorting options, an array of field => direction pairs. Defaults to time_created => DESC
    + fields: `uid,name` - Comma-separated list of fields to include in the output

+ Response 200

    [User Node][]
    
    


## Group Groups

### Group Node [/{group_uid}]

+ Model (application/json)

        {
            "result": {
                "status": 200,
                "message": "OK",
                "total": 1,
                "offset": 0,
                "limit": 0,
                "nodes": {
                    "1": {
                        "type": "group",
                        "subtype": "",
                        "uid": "ge7170",
                        "name": "Qui ex et tempore architecto et.",
                        "url": "https://hackathon.dev/groups/profile/7170/qui-ex-et-tempore-architecto-et",
                        "icon": {
                            "topbar": "https://hackathon.dev/groupicon/7170/topbar/1436194703.jpg",
                            "tiny": "https://hackathon.dev/groupicon/7170/tiny/1436194703.jpg",
                            "small": "https://hackathon.dev/groupicon/7170/small/1436194703.jpg",
                            "medium": "https://hackathon.dev/groupicon/7170/medium/1436194703.jpg",
                            "large": "https://hackathon.dev/groupicon/7170/large/1436194703.jpg",
                            "master": "https://hackathon.dev/groupicon/7170/master/1436194703.jpg"
                        },
                        "briefdescription": "envisioneer interactive systems",
                        "owner": {
                            "type": "user",
                            "subtype": "",
                            "uid": "ue53",
                            "name": "Dr. Chauncey Dach I",
                            "username": "ceasar.moen",
                            "briefdescription": "Profit-focused neutral ability",
                            "banned": false,
                            "validated": "1",
                            "admin": false,
                            "url": "https://hackathon.dev/profile/ceasar.moen",
                            "icon": {
                                "topbar": "https://hackathon.dev/mod/profile/icondirect.php?lastcache=1435408780&joindate=1435408777&guid=53&size=topbar",
                                "tiny": "https://hackathon.dev/mod/profile/icondirect.php?lastcache=1435408780&joindate=1435408777&guid=53&size=tiny",
                                "small": "https://hackathon.dev/mod/profile/icondirect.php?lastcache=1435408780&joindate=1435408777&guid=53&size=small",
                                "medium": "https://hackathon.dev/mod/profile/icondirect.php?lastcache=1435408780&joindate=1435408777&guid=53&size=medium",
                                "large": "https://hackathon.dev/mod/profile/icondirect.php?lastcache=1435408780&joindate=1435408777&guid=53&size=large",
                                "master": "https://hackathon.dev/mod/profile/icondirect.php?lastcache=1435408780&joindate=1435408777&guid=53&size=master"
                            },
                            "time_created": "2015-06-27T05:39:37-07:00",
                            "enabled": "yes"
                        },
                        "container": {
                            "type": "user",
                            "subtype": "",
                            "uid": "ue53",
                            "name": "Dr. Chauncey Dach I",
                            "username": "ceasar.moen",
                            "briefdescription": "Profit-focused neutral ability",
                            "banned": false,
                            "validated": "1",
                            "admin": false,
                            "url": "https://hackathon.dev/profile/ceasar.moen",
                            "icon": {
                                "topbar": "https://hackathon.dev/mod/profile/icondirect.php?lastcache=1435408780&joindate=1435408777&guid=53&size=topbar",
                                "tiny": "https://hackathon.dev/mod/profile/icondirect.php?lastcache=1435408780&joindate=1435408777&guid=53&size=tiny",
                                "small": "https://hackathon.dev/mod/profile/icondirect.php?lastcache=1435408780&joindate=1435408777&guid=53&size=small",
                                "medium": "https://hackathon.dev/mod/profile/icondirect.php?lastcache=1435408780&joindate=1435408777&guid=53&size=medium",
                                "large": "https://hackathon.dev/mod/profile/icondirect.php?lastcache=1435408780&joindate=1435408777&guid=53&size=large",
                                "master": "https://hackathon.dev/mod/profile/icondirect.php?lastcache=1435408780&joindate=1435408777&guid=53&size=master"
                            },
                            "time_created": "2015-06-27T05:39:37-07:00",
                            "enabled": "yes"
                        },
                        "content_access_mode": {
                            "id": "unrestricted",
                            "label": "Unrestricted - Access depends on content-level settings"
                        },
                        "membership": {
                            "id": 2,
                            "label": "Open - Any user may join"
                        },
                        "access": {
                            "id": 1024,
                            "label": "Group: Qui ex et tempore architecto et."
                        },
                        "group_acl": {
                            "id": 1024,
                            "label": "Group: Qui ex et tempore architecto et."
                        },
                        "time_created": "2015-07-06T07:58:22-07:00",
                        "enabled": "yes"
                    }
                }
            }
        }

### Retrieve a single node [GET /{group_uid}{?fields}]

Retrieve a single group node by its *uid*

+ Parameters
    + group_uid:`ge8356` (string,required) - Group UID
    + fields:`uid,name,membership,group_acl` (string, optional) - Comma-separated list of fields to include in the output

+ Response 200

    [Group Node][]

+ Response 403

    [403][]

+ Response 404

    [404][]


